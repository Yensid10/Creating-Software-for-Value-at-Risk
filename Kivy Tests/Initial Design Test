from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.properties import ObjectProperty
from kivy.uix.button import Button


import datetime as dt
import time
import numpy as np
from scipy.stats import norm, binom
import yfinance as yf
import pandas as pd
ftse100 = pd.read_html('https://en.wikipedia.org/wiki/FTSE_100_Index')[4]

class ApplicationView(BoxLayout):
    # Declare ObjectProperty variables for the stock list and user inputs
    stockList = ObjectProperty(None)
    userInputs = ObjectProperty(None)
    # currentInfo = ObjectProperty(None)
    portfolio = "0"
    rlPercent = "0"
    timeHori = "0"
    simMethod = ""

    def __init__(self, **kwargs):
        # Call the parent class's constructor
        super(ApplicationView, self).__init__(**kwargs)
        # Populate the stock list and user inputs
        self.populateList()
        self.populateInputs()

    def populateList(self):
    # Add 100 buttons to the stock list
        for i in range(len(ftse100)):
            button = Button(text=ftse100['Company'][i], size_hint_y=None, height=30, font_size=20)
            button.bind(on_release=lambda btn, i=i: (setattr(self.currentStock, 'text', "Stock: " + ftse100['Ticker'][i]), setattr(self, 'currentTicker', str(ftse100['Ticker'][i]))))
            self.stockList.add_widget(button)
        
    # def updateInfo(self, current, varName):
    #     setattr(self, varName, current.text)
    #     self.currentInfo.text = "[u]Current Info Given[/u]\n" + \
    #                             f"Portfolio Value: £{self.portfolio}\n" + \
    #                             f"Risk Level Percentage: {self.rlPercent}%\n" + \
    #                             f"Time Horizon: {self.timeHori} days"

    def populateInputs(self):
        self.userInputs.clear_widgets()
        # Create a dictionary of variable names and their corresponding displayed texts
        variables = {
            'portfolio': 'Enter Portfolio Value (£): ',
            'rlPercent': 'Enter Risk Level Percentage: ',
            'timeHori': 'Enter Time Horizon: '
            # 'simMethod': 'Enter the VaR :'
        }
        for varName, label in variables.items():
            self.userInputs.add_widget(Label(text=label, size_hint_y=None, height=30, font_size=20))
            centeredLayout = BoxLayout(size_hint_y=None, height=35, padding=[80, 0])
            text = TextInput(size_hint_x=None, width=275, font_size=18, multiline=False)
            text.bind(on_text_validate=lambda current, varName=varName: (setattr(self, varName, current.text), self.populateInputs()))
            centeredLayout.add_widget(text)
            self.userInputs.add_widget(centeredLayout)
        
        
        
        self.userInputs.add_widget(Label(text="\n\n\n\n[u]Current Info Given[/u]\n" + f"Portfolio Value: £{self.portfolio}\n" + f"Risk Level Percentage: {self.rlPercent}%\n" + f"Time Horizon: {self.timeHori} day(s)", size_hint_y=None, height=10, markup=True, font_size=20, pos_hint={'center_x': 0.3}))

            

class IDTApp(App):
    def build(self):
        return ApplicationView()

if __name__ == '__main__':
    IDTApp().run()
